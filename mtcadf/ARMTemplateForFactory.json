{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "mtcadf"
		},
		"AzureSQL_HR_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSQL_HR'"
		},
		"Blob1demo_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Blob1demo'"
		},
		"DataLake_DW_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'DataLake_DW'"
		},
		"DataLake_X_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'DataLake_X'"
		},
		"SQL_DW_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SQL_DW'"
		},
		"datalakeiot_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'datalakeiot'"
		},
		"parquet_staging_hr_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'parquet_staging_hr'"
		},
		"staging_hr_data_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'staging_hr_data'"
		},
		"synapse_dw_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'synapse_dw'"
		},
		"DataLake_DW_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://mtcrawdata.dfs.core.windows.net"
		},
		"DataLake_X_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://mtcrawdata.dfs.core.windows.net"
		},
		"datalakeiot_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://mtcrawdata.dfs.core.windows.net"
		},
		"parquet_staging_hr_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://mtcrawdata.dfs.core.windows.net"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/copy_hr-row_to_hr-modified')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "row-data_to_modified-data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT TOP 2000 * FROM Funcionarios;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Idade",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Idade",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Saiu_da_empresa",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Saiu_da_empresa",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Viagens",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Viagens",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Departamento",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Departamento",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Distancia_de_casa",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Distancia_de_casa",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Educacao",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Educacao",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Area_de_formacao",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Area_de_formacao",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ID_funcionario",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ID_funcionario",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Genero",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Genero",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Nivel_posicao",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Nivel_posicao",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Cargo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Cargo",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Estado_Civel",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Estado_Civel",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Renda_mensal",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Renda_mensal",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Num_empresas_trabalhou",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Num_empresas_trabalhou",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Aumento_salarial_ultimo_ano_em_%",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Aumento_salarial_ultimo_ano_em_%",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Nivel_opcao_acoes",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Nivel_opcao_acoes",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Experiencia_anos",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Experiencia_anos",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Qtd_treinamento_ultimo_ano",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Qtd_treinamento_ultimo_ano",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Anos_na_empresa",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Anos_na_empresa",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Anos_da_ultima_promocao",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Anos_da_ultima_promocao",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Anos_com_mesmo_Gerente",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Anos_com_mesmo_Gerente",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SQL_HR",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HRdatafromSQL_toHRCSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "copy-surveyrawdata-to-surveymodifieddata",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "surveyrawdata",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "surveymodifieddata",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "HR_projeto_bad_attrition",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "row-data_to_modified-data",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "copy-surveyrawdata-to-surveymodifieddata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "HR_projeto_bad_attrition",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"DataFuncionarios": {},
									"FuncionarioSurvey": {},
									"SalvarNoDW": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "staging_hr_data",
									"type": "LinkedServiceReference"
								},
								"folderPath": "datatransformed"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Enviar email sobre falhas",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "row-data_to_modified-data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "email_falha_pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "fajamati@microsoft.com",
								"Activity": "row-data_to_modified-data",
								"ErrorMessage": {
									"value": "@{activity('row-data_to_modified-data').Error.Message}",
									"type": "Expression"
								}
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQL_HR')]",
				"[concat(variables('factoryId'), '/datasets/HRdatafromSQL_toHRCSV')]",
				"[concat(variables('factoryId'), '/datasets/surveyrawdata')]",
				"[concat(variables('factoryId'), '/datasets/surveymodifieddata')]",
				"[concat(variables('factoryId'), '/dataflows/HR_projeto_bad_attrition')]",
				"[concat(variables('factoryId'), '/linkedServices/staging_hr_data')]",
				"[concat(variables('factoryId'), '/pipelines/email_falha_pipeline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_json_to_synapse')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_JSON_TO_DW",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "iot",
									"wildcardFileName": "iot",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "Blob1demo",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['temperature']"
										},
										"sink": {
											"name": "temperature",
											"type": "Single"
										}
									},
									{
										"source": {
											"path": "$['humidity']"
										},
										"sink": {
											"name": "humidity",
											"type": "Single"
										}
									},
									{
										"source": {
											"path": "$['EventProcessedUtcTime']"
										},
										"sink": {
											"name": "EventProcessedUtcTime",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "Json1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Synapse_IOT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Json1')]",
				"[concat(variables('factoryId'), '/datasets/Synapse_IOT')]",
				"[concat(variables('factoryId'), '/linkedServices/Blob1demo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/email_falha_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "falha de pipeline",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-47.eastus2.logic.azure.com:443/workflows/10a2720a92734304bddba09b52d6764b/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=onKoXJckkA6dOEN4WC7KNhx8t5jD56cXxyFPE53oBdI",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"EmailTo": "@{pipeline().parameters.EmailTo}",
								"Subject": "An error has occured in the @{pipeline().Pipeline}-pipeline",
								"DataFactoryName": "@{pipeline().DataFactory}",
								"PipelineName": "@{pipeline().Pipeline}",
								"Activity": "@{pipeline().parameters.Activity}",
								"ErrorMessage": "@{pipeline().parameters.ErrorMessage}"
							}
						}
					}
				],
				"parameters": {
					"EmailTo": {
						"type": "string"
					},
					"Activity": {
						"type": "string"
					},
					"ErrorMessage": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobFSSourceDatasetEntity')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataLake_DW",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlobFSFile",
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataLake_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDWTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "synapse_dw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Misc"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"typeProperties": {
					"tableName": "templatedemodata"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/synapse_dw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDWTable1_New1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "synapse_dw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Misc"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"tableName": "templatedemodata"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/synapse_dw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FuncionarioSurveyRuim')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "synapse_dw",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "FuncBaixaSatisfacao"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/synapse_dw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HRdatafromSQL_toHRCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataLake_X",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "HR",
						"fileSystem": "modified-data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataLake_X')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataLake_DW",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "rawdata"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"temperature": {
							"type": "number"
						},
						"humidity": {
							"type": "number"
						},
						"EventProcessedUtcTime": {
							"type": "string"
						},
						"PartitionId": {
							"type": "integer"
						},
						"EventEnqueuedUtcTime": {
							"type": "string"
						},
						"IoTHub": {
							"type": "object",
							"properties": {
								"MessageId": {
									"type": "null"
								},
								"CorrelationId": {
									"type": "null"
								},
								"ConnectionDeviceId": {
									"type": "string"
								},
								"ConnectionDeviceGenerationId": {
									"type": "string"
								},
								"EnqueuedTime": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataLake_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_HR')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSQL_HR",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Idade",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SaiuDaEmpresa",
						"type": "varchar"
					},
					{
						"name": "Viagens",
						"type": "varchar"
					},
					{
						"name": "Departamento",
						"type": "varchar"
					},
					{
						"name": "DistanciaDeCasa",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Educacao",
						"type": "varchar"
					},
					{
						"name": "CampodeEstudo",
						"type": "varchar"
					},
					{
						"name": "Genero",
						"type": "varchar"
					},
					{
						"name": "NivelPosicao",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Cargo",
						"type": "varchar"
					},
					{
						"name": "EstadoCivil",
						"type": "varchar"
					},
					{
						"name": "Salario",
						"type": "float",
						"precision": 15
					},
					{
						"name": "QtdAnosExperiencia",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QtdTreinamentoUltimoAno",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QtdAnosNaEmpresa",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QtdAnosDaUltimaPromocao",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QtdAnosComMesmoGerente",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Funcionarios"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSQL_HR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQL_DW",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "twittedby",
						"type": "varchar"
					},
					{
						"name": "createdat",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "sentimento",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "twitter"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQL_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/StagingParquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "parquet_staging_hr",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "file.parquet",
						"folderPath": "dataflow",
						"fileSystem": "staging"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/parquet_staging_hr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SynapseHR')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "synapse_dw",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Idade",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DistanciadeCasa",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Educacao",
						"type": "varchar"
					},
					{
						"name": "CampodeEstudo",
						"type": "varchar"
					},
					{
						"name": "SatisfacaonoTrabalho",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Salario",
						"type": "float",
						"precision": 15
					},
					{
						"name": "WorkLifeBalance",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "hr"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/synapse_dw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Synapse_IOT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "synapse_dw",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "temperature",
						"type": "float",
						"precision": 15
					},
					{
						"name": "humidity",
						"type": "float",
						"precision": 15
					},
					{
						"name": "EventProcessedUtcTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "iot"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/synapse_dw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/hrdata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataLake_DW",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "WA_Fn-UseC_-HR-Employee-Attrition.csv",
						"folderPath": "HR",
						"fileSystem": "rawdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataLake_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/profissionais_por_campo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataLake_X",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "datalake-x"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataLake_X')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/searchLog')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Blob1demo",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SearchLog.tsv",
						"folderPath": "SampleData/USQL",
						"container": "mycontainer"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "_c0",
						"type": "String"
					},
					{
						"name": "_c1",
						"type": "String"
					},
					{
						"name": "_c2",
						"type": "String"
					},
					{
						"name": "_c3",
						"type": "String"
					},
					{
						"name": "_c4",
						"type": "String"
					},
					{
						"name": "_c5",
						"type": "String"
					},
					{
						"name": "_c6",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Blob1demo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/surveymodifieddata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataLake_X",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "employee_survey_data.csv",
						"folderPath": "HR",
						"fileSystem": "modified-data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EmployeeID",
						"type": "String"
					},
					{
						"name": "EnvironmentSatisfaction",
						"type": "String"
					},
					{
						"name": "JobSatisfaction",
						"type": "String"
					},
					{
						"name": "WorkLifeBalance",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataLake_X')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/surveyrawdata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataLake_X",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "employee_survey_data.csv",
						"folderPath": "HR",
						"fileSystem": "rawdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataLake_X')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/synapse_twitter')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "synapse_dw",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "twittedby",
						"type": "varchar"
					},
					{
						"name": "criado",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "sentimento",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "twitter"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/synapse_dw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSQL_HR')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSQL_HR_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blob1demo')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('Blob1demo_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataLake_DW')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('DataLake_DW_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('DataLake_DW_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataLake_X')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('DataLake_X_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('DataLake_X_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_DW')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('SQL_DW_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/datalakeiot')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('datalakeiot_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('datalakeiot_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/parquet_staging_hr')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('parquet_staging_hr_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('parquet_staging_hr_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/staging_hr_data')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('staging_hr_data_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/synapse_dw')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('synapse_dw_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/twitterdaily')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "copy_hr-row_to_hr-modified",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 4,
						"startTime": "2020-12-03T03:20:00Z",
						"endTime": "2020-12-03T22:36:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/copy_hr-row_to_hr-modified')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HR')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "hrdata",
								"type": "DatasetReference"
							},
							"name": "hrdata"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "profissionais_por_campo",
								"type": "DatasetReference"
							},
							"name": "datalakeX"
						},
						{
							"dataset": {
								"referenceName": "SynapseHR",
								"type": "DatasetReference"
							},
							"name": "synapseHR"
						}
					],
					"transformations": [
						{
							"name": "renomearcolunas"
						},
						{
							"name": "distanciaCasa"
						},
						{
							"name": "idade"
						},
						{
							"name": "CampodeEstudo"
						},
						{
							"name": "CampoEstudo"
						},
						{
							"name": "colunasimportantes"
						}
					],
					"script": "source(output(\n\t\tAge as integer,\n\t\tAttrition as boolean,\n\t\tBusinessTravel as string,\n\t\tDailyRate as short,\n\t\tDepartment as string,\n\t\tDistanceFromHome as short,\n\t\tEducation as short,\n\t\tEducationField as string,\n\t\tEmployeeCount as boolean,\n\t\tEmployeeNumber as short,\n\t\tEnvironmentSatisfaction as short,\n\t\tGender as string,\n\t\tHourlyRate as short,\n\t\tJobInvolvement as short,\n\t\tJobLevel as short,\n\t\tJobRole as string,\n\t\tJobSatisfaction as short,\n\t\tMaritalStatus as string,\n\t\tMonthlyIncome as short,\n\t\tMonthlyRate as short,\n\t\tNumCompaniesWorked as short,\n\t\tOver18 as boolean,\n\t\tOverTime as boolean,\n\t\tPercentSalaryHike as short,\n\t\tPerformanceRating as short,\n\t\tRelationshipSatisfaction as short,\n\t\tStandardHours as short,\n\t\tStockOptionLevel as short,\n\t\tTotalWorkingYears as short,\n\t\tTrainingTimesLastYear as short,\n\t\tWorkLifeBalance as short,\n\t\tYearsAtCompany as short,\n\t\tYearsInCurrentRole as short,\n\t\tYearsSinceLastPromotion as short,\n\t\tYearsWithCurrManager as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tinferDriftedColumnTypes: true) ~> hrdata\nhrdata select(mapColumn(\n\t\tIdade = Age,\n\t\tAttrition,\n\t\tBusinessTravel,\n\t\tDailyRate,\n\t\tDepartment,\n\t\tDistanciadeCasa = DistanceFromHome,\n\t\tEducacao = Education,\n\t\tCampodeEstudo = EducationField,\n\t\tEmployeeCount,\n\t\tEmployeeNumber,\n\t\tEnvironmentSatisfaction,\n\t\tGender,\n\t\tHourlyRate,\n\t\tJobInvolvement,\n\t\tJobLevel,\n\t\tJobRole,\n\t\tSatisfacaonoTrabalho = JobSatisfaction,\n\t\tMaritalStatus,\n\t\tSalario = MonthlyIncome,\n\t\tMonthlyRate,\n\t\tNumCompaniesWorked,\n\t\tOver18,\n\t\tOverTime,\n\t\tPercentSalaryHike,\n\t\tPerformanceRating,\n\t\tRelationshipSatisfaction,\n\t\tStandardHours,\n\t\tStockOptionLevel,\n\t\tTotalWorkingYears,\n\t\tTrainingTimesLastYear,\n\t\tWorkLifeBalance,\n\t\tYearsAtCompany,\n\t\tYearsInCurrentRole,\n\t\tYearsSinceLastPromotion,\n\t\tYearsWithCurrManager\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renomearcolunas\nrenomearcolunas filter(DistanciadeCasa>=10) ~> distanciaCasa\ndistanciaCasa filter(Idade <= 25) ~> idade\nidade aggregate(groupBy(CampodeEstudo),\n\tEmployeeNumber = sum(EmployeeNumber)) ~> CampodeEstudo\nidade filter(CampodeEstudo == 'Technical Degree') ~> CampoEstudo\nCampoEstudo select(mapColumn(\n\t\tIdade,\n\t\tDistanciadeCasa,\n\t\tEducacao,\n\t\tCampodeEstudo,\n\t\tSatisfacaonoTrabalho,\n\t\tSalario,\n\t\tWorkLifeBalance\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> colunasimportantes\nCampodeEstudo sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> datalakeX\ncolunasimportantes sink(input(\n\t\tIdade as integer,\n\t\tDistanciadeCasa as double,\n\t\tEducacao as string,\n\t\tCampodeEstudo as string,\n\t\tSatisfacaonoTrabalho as integer,\n\t\tSalario as double,\n\t\tWorkLifeBalance as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> synapseHR"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/hrdata')]",
				"[concat(variables('factoryId'), '/datasets/profissionais_por_campo')]",
				"[concat(variables('factoryId'), '/datasets/SynapseHR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HR_projeto_bad_attrition')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "HRdatafromSQL_toHRCSV",
								"type": "DatasetReference"
							},
							"name": "DataFuncionarios"
						},
						{
							"dataset": {
								"referenceName": "surveymodifieddata",
								"type": "DatasetReference"
							},
							"name": "FuncionarioSurvey"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "FuncionarioSurveyRuim",
								"type": "DatasetReference"
							},
							"name": "SalvarNoDW"
						}
					],
					"transformations": [
						{
							"name": "RenomearColunas"
						},
						{
							"name": "JoinFuncionariosSurvey"
						},
						{
							"name": "RemoverIDDuplicado"
						},
						{
							"name": "FiltrarBaixaSatisfacaoTrabalho"
						},
						{
							"name": "SeHouverAlteracao"
						}
					],
					"script": "source(output(\n\t\tID as short,\n\t\tIdade as short,\n\t\tSaiuDaEmpresa as string,\n\t\tViagens as string,\n\t\tDepartamento as string,\n\t\tDistanciaDeCasa as short,\n\t\tEducacao as short,\n\t\tCampodeEstudo as string,\n\t\tGenero as string,\n\t\tNivelPosicao as short,\n\t\tCargo as string,\n\t\tEstadoCivil as string,\n\t\tSalario as integer,\n\t\tQtdAnosExperiencia as short,\n\t\tQtdTreinamentoUltimoAno as short,\n\t\tQtdAnosNaEmpresa as short,\n\t\tQtdAnosDaUltimaPromocao as short,\n\t\tQtdAnosComMesmoGerente as short\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> DataFuncionarios\nsource(output(\n\t\tEmployeeID as integer,\n\t\tEnvironmentSatisfaction as integer,\n\t\tJobSatisfaction as integer,\n\t\tWorkLifeBalance as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> FuncionarioSurvey\nFuncionarioSurvey select(mapColumn(\n\t\tID = EmployeeID,\n\t\tSatisfacaoAmbiente = EnvironmentSatisfaction,\n\t\tSatisfacaoTrabalho = JobSatisfaction,\n\t\tWorkLifeBalance\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: true) ~> RenomearColunas\nDataFuncionarios, RenomearColunas join(DataFuncionarios@ID == RenomearColunas@ID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinFuncionariosSurvey\nJoinFuncionariosSurvey select(mapColumn(\n\t\tID = DataFuncionarios@ID,\n\t\tIdade,\n\t\tSaiuDaEmpresa,\n\t\tViagens,\n\t\tDepartamento,\n\t\tDistanciaDeCasa,\n\t\tEducacao,\n\t\tCampodeEstudo,\n\t\tGenero,\n\t\tNivelPosicao,\n\t\tCargo,\n\t\tEstadoCivil,\n\t\tSalario,\n\t\tQtdAnosExperiencia,\n\t\tQtdTreinamentoUltimoAno,\n\t\tQtdAnosNaEmpresa,\n\t\tQtdAnosDaUltimaPromocao,\n\t\tQtdAnosComMesmoGerente,\n\t\tID = RenomearColunas@ID,\n\t\tSatisfacaoAmbiente,\n\t\tSatisfacaoTrabalho,\n\t\tWorkLifeBalance\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoverIDDuplicado\nRemoverIDDuplicado filter(SatisfacaoTrabalho<=2) ~> FiltrarBaixaSatisfacaoTrabalho\nFiltrarBaixaSatisfacaoTrabalho alterRow(upsertIf(true())) ~> SeHouverAlteracao\nSeHouverAlteracao sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['ID'],\n\tformat: 'table',\n\tstaged: true,\n\tmapColumn(\n\t\tID,\n\t\tIdade,\n\t\tSaiuDaEmpresa,\n\t\tViagens,\n\t\tDepartamento,\n\t\tDistanciaDeCasa,\n\t\tEducacao,\n\t\tCampodeEstudo,\n\t\tGenero,\n\t\tNivelPosicao,\n\t\tCargo,\n\t\tEstadoCivil,\n\t\tSalario,\n\t\tQtdAnosExperiencia,\n\t\tQtdTreinamentoUltimoAno,\n\t\tQtdAnosNaEmpresa,\n\t\tQtdAnosDaUltimaPromocao,\n\t\tQtdAnosComMesmoGerente,\n\t\tSatisfacaoAmbiente,\n\t\tSatisfacaoTrabalho,\n\t\tWorkLifeBalance\n\t)) ~> SalvarNoDW"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HRdatafromSQL_toHRCSV')]",
				"[concat(variables('factoryId'), '/datasets/surveymodifieddata')]",
				"[concat(variables('factoryId'), '/datasets/FuncionarioSurveyRuim')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SearchLog')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "searchLog",
								"type": "DatasetReference"
							},
							"name": "searchLog"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlDWTable1_New1",
								"type": "DatasetReference"
							},
							"name": "sinkIntoDW"
						}
					],
					"transformations": [
						{
							"name": "totalDurationByRegion"
						},
						{
							"name": "RenameColumns"
						},
						{
							"name": "DateFilter"
						},
						{
							"name": "ConvertDate"
						},
						{
							"name": "DurationFilter"
						}
					],
					"script": "source(output(\n\t\t{_col0_} as integer,\n\t\t{_col1_} as string,\n\t\t{_col2_} as string,\n\t\t{_col3_} as string,\n\t\t{_col4_} as integer,\n\t\t{_col5_} as string,\n\t\t{_col6_} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> searchLog\nDateFilter aggregate(groupBy(region),\n\ttotalduration = sum(duration)) ~> totalDurationByRegion\nsearchLog select(mapColumn(\n\t\tuserid = {_col0_},\n\t\tstart = {_col1_},\n\t\tregion = {_col2_},\n\t\tquery = {_col3_},\n\t\tduration = {_col4_},\n\t\turls = {_col5_},\n\t\tclickedurls = {_col6_}\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> RenameColumns\nConvertDate filter(newdate > toDate('2012-02-06','yyyy-MM-dd')) ~> DateFilter\nRenameColumns derive(newdate = toDate(left(start,instr(start,' ')-1),'MM/dd/yyyy')) ~> ConvertDate\ntotalDurationByRegion filter(totalduration > 200) ~> DurationFilter\nDurationFilter sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: false,\n\tmapColumn(\n\t\tregion,\n\t\ttotalduration\n\t)) ~> sinkIntoDW"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/searchLog')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlDWTable1_New1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sqltwitter_to_synapse')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SqlTable",
								"type": "DatasetReference"
							},
							"name": "sqldata"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "synapse_twitter",
								"type": "DatasetReference"
							},
							"name": "synapse"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\ttwittedby as string,\n\t\tcreatedat as timestamp,\n\t\tsentimento as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> sqldata\nsqldata sink(input(\n\t\ttwittedby as string,\n\t\tcriado as timestamp,\n\t\tsentimento as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tmapColumn(\n\t\ttwittedby,\n\t\tcriado = createdat,\n\t\tsentimento\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> synapse"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlTable')]",
				"[concat(variables('factoryId'), '/datasets/synapse_twitter')]"
			]
		}
	]
}