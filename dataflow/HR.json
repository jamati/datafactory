{
	"name": "HR",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "hrdata",
						"type": "DatasetReference"
					},
					"name": "hrdata"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "profissionais_por_campo",
						"type": "DatasetReference"
					},
					"name": "datalakeX"
				},
				{
					"dataset": {
						"referenceName": "SynapseHR",
						"type": "DatasetReference"
					},
					"name": "synapseHR"
				}
			],
			"transformations": [
				{
					"name": "renomearcolunas"
				},
				{
					"name": "distanciaCasa"
				},
				{
					"name": "idade"
				},
				{
					"name": "CampodeEstudo"
				},
				{
					"name": "CampoEstudo"
				},
				{
					"name": "colunasimportantes"
				}
			],
			"script": "source(output(\n\t\tAge as integer,\n\t\tAttrition as boolean,\n\t\tBusinessTravel as string,\n\t\tDailyRate as short,\n\t\tDepartment as string,\n\t\tDistanceFromHome as short,\n\t\tEducation as short,\n\t\tEducationField as string,\n\t\tEmployeeCount as boolean,\n\t\tEmployeeNumber as short,\n\t\tEnvironmentSatisfaction as short,\n\t\tGender as string,\n\t\tHourlyRate as short,\n\t\tJobInvolvement as short,\n\t\tJobLevel as short,\n\t\tJobRole as string,\n\t\tJobSatisfaction as short,\n\t\tMaritalStatus as string,\n\t\tMonthlyIncome as short,\n\t\tMonthlyRate as short,\n\t\tNumCompaniesWorked as short,\n\t\tOver18 as boolean,\n\t\tOverTime as boolean,\n\t\tPercentSalaryHike as short,\n\t\tPerformanceRating as short,\n\t\tRelationshipSatisfaction as short,\n\t\tStandardHours as short,\n\t\tStockOptionLevel as short,\n\t\tTotalWorkingYears as short,\n\t\tTrainingTimesLastYear as short,\n\t\tWorkLifeBalance as short,\n\t\tYearsAtCompany as short,\n\t\tYearsInCurrentRole as short,\n\t\tYearsSinceLastPromotion as short,\n\t\tYearsWithCurrManager as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true) ~> hrdata\nhrdata select(mapColumn(\n\t\tIdade = Age,\n\t\tAttrition,\n\t\tBusinessTravel,\n\t\tDailyRate,\n\t\tDepartment,\n\t\tDistanciadeCasa = DistanceFromHome,\n\t\tEducacao = Education,\n\t\tCampodeEstudo = EducationField,\n\t\tEmployeeCount,\n\t\tEmployeeNumber,\n\t\tEnvironmentSatisfaction,\n\t\tGender,\n\t\tHourlyRate,\n\t\tJobInvolvement,\n\t\tJobLevel,\n\t\tJobRole,\n\t\tSatisfacaonoTrabalho = JobSatisfaction,\n\t\tMaritalStatus,\n\t\tSalario = MonthlyIncome,\n\t\tMonthlyRate,\n\t\tNumCompaniesWorked,\n\t\tOver18,\n\t\tOverTime,\n\t\tPercentSalaryHike,\n\t\tPerformanceRating,\n\t\tRelationshipSatisfaction,\n\t\tStandardHours,\n\t\tStockOptionLevel,\n\t\tTotalWorkingYears,\n\t\tTrainingTimesLastYear,\n\t\tWorkLifeBalance,\n\t\tYearsAtCompany,\n\t\tYearsInCurrentRole,\n\t\tYearsSinceLastPromotion,\n\t\tYearsWithCurrManager\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renomearcolunas\nrenomearcolunas filter(DistanciadeCasa>=10\r\n) ~> distanciaCasa\ndistanciaCasa filter(Idade <= 25) ~> idade\nidade aggregate(groupBy(CampodeEstudo),\n\tEmployeeNumber = sum(EmployeeNumber)) ~> CampodeEstudo\nidade filter(CampodeEstudo == 'Technical Degree') ~> CampoEstudo\nCampoEstudo select(mapColumn(\n\t\tIdade,\n\t\tDistanciadeCasa,\n\t\tEducacao,\n\t\tCampodeEstudo,\n\t\tSatisfacaonoTrabalho,\n\t\tSalario,\n\t\tWorkLifeBalance\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> colunasimportantes\nCampodeEstudo sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> datalakeX\ncolunasimportantes sink(input(\n\t\tIdade as integer,\n\t\tDistanciadeCasa as double,\n\t\tEducacao as string,\n\t\tCampodeEstudo as string,\n\t\tSatisfacaonoTrabalho as integer,\n\t\tSalario as double,\n\t\tWorkLifeBalance as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> synapseHR"
		}
	}
}